version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - airflow-net

  airflow-webserver:
    image: apache/airflow:2.7.2
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
    ports:
      - "8080:8080"
    command: webserver
    networks:
      - airflow-net

  airflow-scheduler:
    image: apache/airflow:2.7.2
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
    command: scheduler
    networks:
      - airflow-net

  backend:
    build:
      context: ./app/backend
    ports:
      - "8000:8000"
    volumes:
      - ./app/backend:/app
      - ./airflow/models:/app/models
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    networks:
      - airflow-net

volumes:
  postgres-db-volume:

networks:
  airflow-net:
